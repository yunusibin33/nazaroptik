<!-- form.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Form</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>

body {
    background: -moz-linear-gradient(45deg, #02e1ba 0%, #26c9f2 29%, #d911f2 66%, #ffa079 100%);
    background: -webkit-linear-gradient(45deg, #02e1ba 0%,#26c9f2 29%,#d911f2 66%,#ffa079 100%);
    background: linear-gradient(45deg, #02e1ba 0%,#26c9f2 29%,#d911f2 66%,#ffa079 100%);
    background-size: 400% 400%;
    -webkit-animation: Gradient 15s ease infinite;
	-moz-animation: Gradient 15s ease infinite;
	animation: Gradient 15s ease infinite;
	/*min-height: calc(100vh - 2rem);*/
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: space-evenly;
	overflow: hidden;
	position: relative; 
  margin: 16px;
}

body::before, 
body::after {
	content: "";
	width: 70vmax;
	height: 70vmax;
	position: absolute;
	background: rgba(255, 255, 255, 0.07);
	left: -20vmin;
	top: -20vmin;
	animation: morph 15s linear infinite alternate, spin 20s linear infinite;
	z-index: 1;
	will-change: border-radius, transform;
	transform-origin: 55% 55%;
	pointer-events: none; 
}
	
body::after {
    width: 70vmin;
    height: 70vmin;
    left: auto;
    right: -10vmin;
    top: auto;
    bottom: 0;
    animation: morph 10s linear infinite alternate, spin 26s linear infinite reverse;
    transform-origin: 20% 20%; 
}

@-webkit-keyframes Gradient {
	0% {
		background-position: 0 50%
	}
	50% {
		background-position: 100% 50%
	}
	100% {
		background-position: 0 50%
	}
}

@-moz-keyframes Gradient {
	0% {
		background-position: 0 50%
	}
	50% {
		background-position: 100% 50%
	}
	100% {
		background-position: 0 50%
	}
}

@keyframes Gradient {
	0% {
		background-position: 0 50%
	}
	50% {
		background-position: 100% 50%
	}
	100% {
		background-position: 0 50%
	}
}

@keyframes morph {
  0% {
    border-radius: 40% 60% 60% 40% / 70% 30% 70% 30%; }
  100% {
    border-radius: 40% 60%; } 
}

@keyframes spin {
  to {
    transform: rotate(1turn); 
  } 
}
	.st0{display:none;}
	.st1{display:inline;}
	.st2{opacity:0.29;}
	.st3{fill:#FFFFFF;}
	.st4{clip-path:url(#SVGID_2_);fill:#FFFFFF;}
	.st5{clip-path:url(#SVGID_4_);}
	.st6{clip-path:url(#SVGID_6_);}
	.st7{clip-path:url(#SVGID_8_);}
	.st8{clip-path:url(#SVGID_10_);}
	.st9{fill:none;}
	.st10{clip-path:url(#SVGID_12_);}
	.st11{opacity:0.7;}
	.st12{clip-path:url(#SVGID_14_);}
	.st13{opacity:0.2;}
	.st14{clip-path:url(#SVGID_16_);}
	.st15{opacity:0.3;fill:#FFFFFF;enable-background:new    ;}

    .container {
      background-color: rgb(22, 49, 75);
      box-shadow: 0 0 10px rgba(48, 78, 104, 0.9);
      border-radius: 8px;
      padding: 30px;
      margin-top: 80px;
    }

    .form-label {
      color: #deeaf5;
    }

    .form-control {
      background: none !important;
      color: #FFFFFF !important;
    }

    .btn-primary {
      border-color: hsl(130, 75%, 61%) ;
    color: white !important;
    background: none !important;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
    .title{
      color: #deeaf5;
      font-family: 'Times New Roman', Times, serif;
    }
  </style>
</head>
<body>
  <div class="container">
    
    <div class="row justify-content-center">
      <div class="col-md-6">
        <h1 class="text-center title mb-4">Hasta Ekle</h1>
        <form action="/form" method="POST" enctype="multipart/form-data">
          <div class="mb-3">
            <label for="isim" class="form-label">Ad:</label>
            <input type="text" class="form-control" id="isim" name="isim" required>
          </div>
          
          <div class="mb-3">
            <label for="soyisim" class="form-label">Soyad:</label>
            <input type="text" class="form-control" id="soyisim" name="soyisim" required>
          </div>
          
          <div class="mb-3">
            <label for="foto" class="form-label">Fotoğraf:</label>
            <input type="file" class="form-control" id="foto" name="foto" accept="image/jpeg,image/png" capture="camera" required>
          </div>

          <div class="mb-3">
          <button type="submit" class="btn btn-primary">Gönder</button>
          <a href="http://192.168.0.104:4000" class="btn btn-primary">Kullanıcıları Görüntüle</a>
          </div>
        </form>
      </div>
    </div>
  </div>

<script>
  async function convertAndSubmit() {
    const isim = document.getElementById('isim').value;
    const soyisim = document.getElementById('soyisim').value;
    const fotoInput = document.getElementById('foto');
    const foto = fotoInput.files[0];

    if (!foto) {
      alert('Lütfen bir fotoğraf seçin.');
      return;
    }

    // Fotoğrafı webp formatına dönüştür
    const webpBuffer = await convertToWebp(foto);

    // Dönüştürülen fotoğrafı server'a gönder
    const formData = new FormData();
    formData.append('isim', isim);
    formData.append('soyisim', soyisim);
    formData.append('foto', new Blob([webpBuffer], { type: 'image/webp' }));


    const response = await fetch('/form', {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      // Başarılıysa sayfayı yenile
      location.reload();
    } else {
      console.error('Form gönderme hatası:', response.statusText);
    }
  }

  async function convertToWebp(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = async function () {
        const img = new Image();
        img.src = reader.result;

        img.onload = async function () {
          const canvas = document.createElement('canvas');
          canvas.width = img.width;
          canvas.height = img.height;

          const context = canvas.getContext('2d');
          context.drawImage(img, 0, 0, img.width, img.height);

          canvas.toBlob(
            async function (blob) {
              const arrayBuffer = await blob.arrayBuffer();
              resolve(new Uint8Array(arrayBuffer));
            },
            'image/webp',
            1
          );
        };
      };

      reader.readAsDataURL(file);
    });
  }
</script>
</body>
</html>
